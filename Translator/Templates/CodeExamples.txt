================================
a = 5;
if(a > 3)
{
if(a < 8)
{
b = a / 2;
}
}
c = a + b;
           
RESULT: a =5, b = 2,5, c = 7,5	   
================================

================================
a = 7;
if(a > 5)
{
b = a - 2;
while(a < 60)
{
a = a * 2;
}
a = a - b;
}

RESULT: a = 107, b = 5

FAILED
================================

================================
a = 5;
if(a > 4)
{
b = 3;
if((b + 1) != 4)
{
a = 0;
}
t = a * b;
}

RESULT: a = 5, b = 3, t = 15
================================

================================
a = 0;
while(a < 10)
{
a = a + 3;
if(a < 7)
{
b = 4;
}
else
{
b = 10;
} 
} 
b = b / 2;
if(b >= 5)
{
a = b / 2;
}
           
RESULT: a = 2,5, b = 5
================================

================================
a = 5;
if(a > 2)
{
b = 3;
}
else
{
b = 2;
}
t = 10;
c = (a + b) / t;

RESULT: a = 5, b = 3, t = 10, c = 0.8
================================

================================
i = 0;
b = 1;
while (i < 10)
{
b = b * 2;
i = i + 1;
}

RESULT: i = 10, b = 1024
================================

================================
first = 0;
second = 1;
n = 7;
i = 2;

while (i < n)
{
second = first + second;
first = second - first;
i = i + 1;
}

RESULT: first = 5, second = 8, n = 7, i = 7
================================

================================
list newList;

newList.insert(5, 0);
newList.insert(10, 0);
newList.insert(15, 0);

newList.display();
newList.clear();

RESULT:
Element 1: 15
Element 2: 10
Element 3: 5
================================
Пример работы списков.
================================
list newList;
a = 5;
b = 0;
c = 2;

newList.insert(a, 0);
newList.insert(b, 1);
newList.insert(c - 1, 2);
newList.insert(3, 0);

newList.display();
out(newList.getValue(0));
out(newList.getIndex(5));

i = 0;
sum = 0;
while (i < newList.size())
{
sum = sum + newList.getValue(i);
i = i + 1;
}
out(sum);

newList.delete(2);
newList.delete(10 * (5 + 2) - 70);
newList.display();
out(newList.size());

a = (a * newList.getValue(0) - (c / newList.getValue(1)) + 1) / newList.size();
out(a);

RESULT:
Element 1: 3
Element 2: 5
Element 3: 0
Element 4: 1
3
1
9
Element 1: 5
Element 2: 1
2
12

Variables:
a: 12
b: 0
c: 2
i: 4
sum: 9
================================
Пример работы хеш-таблицы.
================================
htable ht;

ht.insert(5, 3);
ht.insert(6, 4);
ht.insert((7 + 3)/2 + 2, 5);
ht.insert(ht.search(6) * 2, 5);

mult = 1;

for (i = 5; i <= 8; i = i + 1)
{
mult = mult * ht.search(i);
}

out(mult);

ht.delete(7);

ht.display();

RESULT:
Stack machine results:
300
[hash]  key:value       ...
[5]     5:3
[6]     6:4
[8]     8:5

Variables:
mult: 300
i: 9
================================

================================
htable ht;

ht.insert(5, 3);
ht.insert(6, 4);
ht.insert((7 + 3)/2 + 2, 5);

ht.delete(7);

a = 5 * ht.search(5);
out(a);
ht.display();

RESULT:
15
[hash]  key:value       ...
[5]     5:3
[6]     6:4
================================

================================
list a;
htable b;

v = 10;
x = 50;
c = 2;

a.insert(v, 0);
a.insert(x + v, 0);
a.insert(c, c);

b.insert(c, 0);
b.insert(16, a.getValue(0));
b.insert(v, c);

a.display();
b.display();

RESULT:
Element 1: 60
Element 2: 10
Element 3: 2
[hash]  key:value       ...
[2]     2:0
[16]    16:60
[10]    10:2

Variables:
v: 10
x: 50
c: 2
================================

================================
a = 5;

for (i = 0; i < 5; i = i + 1)
{
out(a);
a = a + 1;
}

out(a);

RESULT:
5
6
7
8
9
10
================================